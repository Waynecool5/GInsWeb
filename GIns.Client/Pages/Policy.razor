@page "/Policy"
@using GIns.Shared
@using System.Net.Http
@using System.Net.Http.Headers
@using Newtonsoft.Json;
@inject HttpClient Http

@*@using System.IO;
    @using System.Text;
    @using Newtonsoft.Json;
    @using OfficeOpenXml;
    @using OfficeOpenXml.Table;
    @inject IFileReaderService fileReaderService;*@

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>
@*<input type="file" @ref="@inputTypeFileElement" />
    <button @onclick="@ReadFile">Read file</button>*@

@if (_Policies == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>PolicyType</th>
                <th>PolicyCode</th>
                <th>PolicyActive</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Policy in _Policies)
            {
                <tr>
                    <td>@Policy.PolicyType</td>
                    <td>@Policy.PolicyCode</td>
                    <td>@Policy.PolicyActive</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
static UserModel newToken = null;
static UserToken _Token = null;

Policies[] _Policies;
//Token[] _Token;
//ElementRef inputTypeFileElement;
int Mode = 0;

protected override async Task OnInitAsync()
{
    var userParam = new UserModel
    {
        Id = 1,
        FirstName = "Test1",
        LastName = "User1",
        Username = "test1",
        Password = "test1",
        APPId = "4d53bce03ec34c0a911182d4c228ee6c", //gsStore.APPId,
        APIKey = "A93reRTUJHsCuQSHR+L3GxqOJyDmQpCgps102ciuabc=",
        APIData = "", //requestSignatureBase64String,
        APITimeStamp = "", //requestTimeStamp,
        Token = ""
    };

   // _Token = GetSecurityToken("http://localhost:56693/", userParam);

    //get Token Security Access to API
    //_Token = await Http.GetJsonAsync<UserToken>("api/Security/GetSecurityToken");

    _Policies = await Http.GetJsonAsync<Policies[]>("api/Policy/GetPoliciesAsync?" + Mode);
}

public async Task<UserModel> GetSecurityToken(string UrlAddress, UserModel userParam)
{
    using (var client = new HttpClient())
    {
        client.BaseAddress = new Uri(UrlAddress);
        client.DefaultRequestHeaders.Accept.Clear();
        client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

        //StringContent content = new StringContent(JsonConvert.SerializeObject(userParam), Encoding.UTF8, "application/json");

        // HTTP POST to get token
        HttpResponseMessage response1 = await client.PostAsync("api/User/authenticate", clsGlobal.GetStringContent_UTF8(userParam)); // content); //.Result();
        if (response1.IsSuccessStatusCode)
        {
            // newToken = await response1.Content.ReadAsStringAsync<UserModel>();

            var stringResponse = await response1.Content.ReadAsStringAsync();

            UserModel newToken = JsonConvert.DeserializeObject<UserModel>(stringResponse);
        }
    }

    return newToken;
}

//public async Task CallWebApi_Async()
//{
//    using (var _client = new HttpClient())
//    {
//        //Call Thani's Web Api
//        _client.BaseAddress = new Uri("http://localhost:56693/"); //gsStore.WebThaniApiPath);// https://localhost:44305/");
//        _client.DefaultRequestHeaders.Accept.Clear();
//        _client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));

//        //var t = JsonConvert.DeserializeObject<Token>(token);

//        _client.DefaultRequestHeaders.Clear();
//        _client.DefaultRequestHeaders.Add("Authorization", "Bearer " + _Token.Token.ToString());// t.access_token);

//        //redeem Points
//        //HttpResponseMessage response = await _client.PostAsync("api/points/GetVoidProfile?apiType=" + apiType.ToString(), points);
//    }
//}

//private async Task PostRequest()
//   {
//       Http.DefaultRequestHeaders.Authorization =   new AuthenticationHeaderValue("Bearer", "{OAUTH TOKEN}");

//       var requestMessage = new HttpRequestMessage()
//       {
//           Method = new HttpMethod("POST"),
//           RequestUri = new Uri("https://localhost:10000/api/todo"),
//           Content = new StringContent(@"{""name"":""A New Todo Item"",""isComplete"":false}")
//       };

//       requestMessage.Content.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue("application/json");

//       requestMessage.Content.Headers.TryAddWithoutValidation( "x-custom-header", "value");

//       requestMessage.Properties[WebAssemblyHttpMessageHandler.FetchArgs] = new
//       {
//           credentials = FetchCredentialsOption.Include
//       };

//       var response = await Http.SendAsync(requestMessage);
//       var responseStatusCode = response.StatusCode;
//       var responseBody = await response.Content.ReadAsStringAsync();
//   }



//public async Task ReadFile()
//{

//    var files = await fileReaderService.CreateReference(inputTypeFileElement).EnumerateFilesAsync();

//    var stream = await files.First().OpenReadAsync();

//    //_excel = JsonConvert.DeserializeObject<GInsExcelMap>(ReadFile(stream).ToString());

//}

/// <summary>
/// /Home/ReadFile
/// </summary>
//public async Task ReadFile()
//{
//    var fileDownloadName = "report.xlsx";
//    var reportsFolder = "reports";
//    var fileInfo = new FileInfo(Path.Combine(_hostingEnvironment.WebRootPath, reportsFolder, fileDownloadName));
//    if (!fileInfo.Exists)
//    {
//        // Create an excel file
//        //using (var package = createExcelPackage())
//        //{
//        //    package.SaveAs(fileInfo);
//        //}

//        using (var package = new ExcelPackage(fileInfo))
//        {
//            return readExcelPackageToString(package, package.Workbook.Worksheets[worksheetName]);
//        }
//    }
//}

//    return readExcelPackage(fileInfo, worksheetName: "Employee");
//}


//private string readExcelPackage(FileInfo fileInfo, string worksheetName)
//{
//    using (var package = new ExcelPackage(fileInfo))
//    {
//        return readExcelPackageToString(package, package.Workbook.Worksheets[worksheetName]);
//    }
//}


//private string readExcelPackageToString(ExcelPackage package, ExcelWorksheet worksheet)
//{
//    var rowCount = worksheet.Dimension?.Rows;
//    var colCount = worksheet.Dimension?.Columns;

//    if (!rowCount.HasValue || !colCount.HasValue)
//    {
//        return string.Empty;
//    }

//    //var sb = new StringBuilder();
//    StringBuilder sb = new StringBuilder();
//    StringWriter sw = new StringWriter(sb);

//    for (int row = 1; row <= rowCount.Value; row++)
//    {



//        using (JsonWriter writer = new JsonTextWriter(sw))
//        {
//            writer.Formatting = Formatting.Indented;

//            writer.WriteStartObject();
//            writer.WritePropertyName("ID");
//            writer.WriteValue(row);
//            writer.WritePropertyName("PayorID");
//            writer.WriteValue(worksheet.Cells[row, 1].Value);
//            writer.WritePropertyName("CompanyName");
//            writer.WriteValue(worksheet.Cells[row, 2].Value);
//            writer.WritePropertyName("BenefitContractID");
//            writer.WriteValue(worksheet.Cells[row, 3].Value);
//            writer.WritePropertyName("BenefitContractName");
//            writer.WriteValue(worksheet.Cells[row, 4].Value);
//            writer.WritePropertyName("MemberID");
//            writer.WriteValue(worksheet.Cells[row, 5].Value);
//            writer.WritePropertyName("LastName");
//            writer.WriteValue(worksheet.Cells[row, 6].Value);
//            writer.WritePropertyName("Firstname");
//            writer.WriteValue(worksheet.Cells[row, 7].Value);
//            writer.WritePropertyName("Relationship");
//            writer.WriteValue(worksheet.Cells[row, 8].Value);
//            writer.WritePropertyName("DOB");
//            writer.WriteValue(worksheet.Cells[row, 9].Value);
//            writer.WritePropertyName("Gender");
//            writer.WriteValue(worksheet.Cells[row, 10].Value);
//            writer.WritePropertyName("Address1");
//            writer.WriteValue(worksheet.Cells[row, 11].Value);
//            writer.WritePropertyName("Address2");
//            writer.WriteValue(worksheet.Cells[row, 12].Value);
//            writer.WritePropertyName("City");
//            writer.WriteValue(worksheet.Cells[row, 13].Value);
//            writer.WritePropertyName("Country");
//            writer.WriteValue(worksheet.Cells[row, 14].Value);
//            writer.WritePropertyName("Phone");
//            writer.WriteValue(worksheet.Cells[row, 15].Value);
//            writer.WritePropertyName("EXT");
//            writer.WriteValue(worksheet.Cells[row, 14].Value);
//            writer.WritePropertyName("Phone2");
//            writer.WriteValue(worksheet.Cells[row, 15].Value);

//            writer.WriteEnd();
//            writer.WriteEndObject();
//        }
//        //for (int col = 1; col <= colCount.Value; col++)
//        //{
//        //    sb.AppendFormat("{0}\t", worksheet.Cells[row, col].Value);
//        //}
//        //sb.Append(Environment.NewLine);
//    }
//    return sb.ToString();
//    //Console.WriteLine(sb.ToString());
//}

//private ExcelPackage createExcelPackage()
//{
//    var package = new ExcelPackage();
//    package.Workbook.Properties.Title = "Salary Report";
//    package.Workbook.Properties.Author = "Vahid N.";
//    package.Workbook.Properties.Subject = "Salary Report";
//    package.Workbook.Properties.Keywords = "Salary";


//    var worksheet = package.Workbook.Worksheets.Add("Employee");

//    //First add the headers
//    worksheet.Cells[1, 1].Value = "ID";
//    worksheet.Cells[1, 2].Value = "Name";
//    worksheet.Cells[1, 3].Value = "Gender";
//    worksheet.Cells[1, 4].Value = "Salary (in $)";

//    //Add values

//    var numberformat = "#,##0";
//    var dataCellStyleName = "TableNumber";
//    var numStyle = package.Workbook.Styles.CreateNamedStyle(dataCellStyleName);
//    numStyle.Style.Numberformat.Format = numberformat;

//    worksheet.Cells[2, 1].Value = 1000;
//    worksheet.Cells[2, 2].Value = "Jon";
//    worksheet.Cells[2, 3].Value = "M";
//    worksheet.Cells[2, 4].Value = 5000;
//    worksheet.Cells[2, 4].Style.Numberformat.Format = numberformat;

//    worksheet.Cells[3, 1].Value = 1001;
//    worksheet.Cells[3, 2].Value = "Graham";
//    worksheet.Cells[3, 3].Value = "M";
//    worksheet.Cells[3, 4].Value = 10000;
//    worksheet.Cells[3, 4].Style.Numberformat.Format = numberformat;

//    worksheet.Cells[4, 1].Value = 1002;
//    worksheet.Cells[4, 2].Value = "Jenny";
//    worksheet.Cells[4, 3].Value = "F";
//    worksheet.Cells[4, 4].Value = 5000;
//    worksheet.Cells[4, 4].Style.Numberformat.Format = numberformat;

//    // Add to table / Add summary row
//    var tbl = worksheet.Tables.Add(new ExcelAddressBase(fromRow: 1, fromCol: 1, toRow: 4, toColumn: 4), "Data");
//    tbl.ShowHeader = true;
//    tbl.TableStyle = TableStyles.Dark9;
//    tbl.ShowTotal = true;
//    tbl.Columns[3].DataCellStyleName = dataCellStyleName;
//    tbl.Columns[3].TotalsRowFunction = RowFunctions.Sum;
//    worksheet.Cells[5, 4].Style.Numberformat.Format = numberformat;

//    // AutoFitColumns
//    worksheet.Cells[1, 1, 4, 4].AutoFitColumns();

//    worksheet.HeaderFooter.OddFooter.InsertPicture(
//        new FileInfo(Path.Combine(_hostingEnvironment.WebRootPath, "images", "captcha.jpg")),
//        PictureAlignment.Right);

//    return package;
//}

}
